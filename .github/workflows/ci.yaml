name: CI 🚀

on:
  push:
    branches: [main, master]
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read
  checks: write

env:
  GO_VERSION: '1.23.3'
  GOLANGCI_LINT_VERSION: v1.63.4

jobs:
  lint:
    name: 🔍 Code Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: ⚙️ Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: 📝 Run Linter
        uses: golangci/golangci-lint-action@v6
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          args: --config .golangci.yml

  test:
    name: 🧪 Unit Tests
    needs: lint
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: ⚙️ Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: 📦 Get Dependencies
        run: |
          go get ./...
          go mod tidy

      - name: 🧪 Run Tests
        run: go test -race -coverprofile="coverage.out" -covermode=atomic ./...

      - name: 📊 Upload Coverage Report
        if: matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.out
          fail_ci_if_error: true

  build:
    name: 🏗️ Build
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: ⚙️ Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: 📦 Get Dependencies
        run: |
          go get ./...
          go mod tidy

      - name: 🏗️ Build Binary
        run: go build -v ./...

  integration-test:
    name: 🔄 Integration Tests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: ⚙️ Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: 📦 Get Dependencies
        run: |
          go get ./...
          go mod tidy

      - name: 🏗️ Build CLI
        run: go build -o aws-taggy ./cli

      - name: 🆘 Run CLI Help Command
        run: ./aws-taggy help
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
